1.ls (opt) [文件或者路径](路径不加就表示是当前路径)
  opt:
	-a  显示所有文件，隐藏文件（系统文件）
	-l  显示详细信息   (注：很多时候都用ll代替ls -l,这是别名里面设定的，可以更改) 
	-d  查看目录属性 (查看目录本身的属性)
	-h  人性化显示文件大小 (表示成多少K，多少M)
	-i  显示inode  
2.mkdir -p [目录名]  (make directories)
  	-p  递归创建   (mkdir -p /wzx/bxy)
3.cd [目录]  (change directory)
 	cd    进入当前用户家目录
 	cd -  进入上次目录
  	cd .. 进入上一级目录
4.pwd (print working directory)
5.rm -rf [文件或者目录] (remove)
  	-r  删除目录
  	-f  强制     (一般用的时候就把两个都加上)
6.touch [文件]
  	（主要用于创建文件）
7.cp (opt) [原文件或目录] [目标目录] (copy)
	（如果目标文件不加名字就是原名复制，否则就改名复制）:colors delek

  opt:
	-r  复制目录
	-p  连带文件属性复制
	-d  若原文件是链接文件，则复制链接属性
	-a  相当于-pdr (一般直接用这个)
8.mv [原文件或目录] [目标目录] (move)
	（改名就得用这个，此时原文件和目标文件在同一个目录下）
9.ln -s [原文件] [目标文件]  (link)
	-s  创建软链接（不加就是硬链接）
	（目标文件可以改名链接）
  硬链接：
	1.拥有相同的i节点和存储块，可以看成是同一个文件
	2.可通过i节点识别（两个节点号一样）
	3.不能跨分区
	4.不能针对目录
	5.删除或修改一个，另外一个也发生变化，等于是一个门的两个钥匙
  软连接：
	1.类似于windows的创建快捷方式
	2.拥有自己的i节点号和block块，数据块中只保存原文件的文件名和i节点号，没有实际数据
	3.lrwxrwxrwx  l表示软链接，软链接文件权限都为rwx
	4.修改任意文件，另一个都能改变
	5.删除原文件，软链接不能使用   (原文件一定要写成绝对路径)
10.echo " "
	shell中的命令，表示字符串的输出，可以定向指向某个文件
	echo "wzx love bxy" > /wb
11.locate [文件名]
	1.在后台数据库/var/lib/mlocate中按文件名搜索，速度很快
	2.不能搜索到新创建的文件，其数据库更新是一天更新
	3.用updatedb更新数据库，强制执行更新
	4.只能搜文件名
	5.按照/etc/updatedb.conf配置文件搜索，不搜索/tmp目录（.conf一般是配置文件扩展名）
12.whereis [命令名]
	（搜索系统命令的所在路径及帮助文档位置，不能搜文件）
	-b  只查找可执行文件
	-m  只查找帮助文件
13.which [命令名]
	（搜索系统命令所在路径及别名）
	 定义系统搜索命令路径：PATH环境变量（echo $PATH）
14.find [搜索范围] [搜索条件]
	1.避免大范围搜索，耗费系统资源
	2.通配符
		*  匹配任意内容
		？ 匹配任意一个字符
		[] 匹配任意一个中括号内的字符
	3.条件
		-name   以名称搜索
		-iname  名称不区分大小写
		-user   按照所有者搜索
		-nouser 查找没有所有者的文件（内核产生的文件没有所有者，外来文件没有所有者）
		-mtime +10 查找10天前修改的文件
		       -10 查找10天内修改的文件
		        10 查找10天当天修改的文件
		-size +25k(k小写) 查找文件大小是25k的文件（-25k小于25k，+25k大于k），（注：如果要是兆字节M，必须是大写）
		-inum   以节点号来搜索
	4.复杂操作
		find /etc -size +20k -a -size -50k 查找/etc目录下，大于20k并且小于50k的文件
			-a and 逻辑与
			-o or  逻辑或
		find /etc -size +20k -a -size -50k -exec ls -lh {} \;  查找/etc目录下，大于20k并且小于50k的文件，并显示详细信息
			-exec/-ok 命令 {} \; 对搜索结果执行操作（注：后面的操作必须能够执行前面查找出来的文件）	
15.grep (opt) [字符串] [文件名]
	（在文件中匹配符合条件的字符串）
  opt:
	-i  忽略大小写
	-v 排除指定字符串（取反，不搜索包含字符的内容） 
	
	（注：find和grep的区别：find搜索文件，如果匹配，使用通用符进行完全匹配；grep是在文件当中搜索字符串，如果匹配，
	使用正则表达式进行包含匹配）
16.whoami
	（输出当前用户）
17.whatis [命令名]
	（查看命令的内容）
18.cat [文件名]
	（查看文件内容）
19.vi [文件名]
	（以vi方式进入文件进行编写）
20.ifconfig 
	（IP地址查看命令）
21.man -f [命令]
	（获取指定命令的帮助）
	-f  查看命令等级
	-k  相关命令的所有命令信息
  等级：
	1  查看命令的帮助
	2  查看可被内核调用的函数的帮助
	3  查看函数和函数库的帮助
	4  查看特殊文件的帮助（主要是/dev目录下的文件）
	5  查看配置文件的帮助
	8  查看系统管理员可用命令的帮助
22.命令 --help 
	（获取命令选项的帮助）
22.help shell内部命令
	（获取shell内部命令的帮助）
23.zip 压缩文件名 源文件
	（压缩文件，源文件不消失）
   zip -r 压缩文件名 源目录
	（压缩目录）
24.unzip (opt) 压缩文件
	（解压缩.zip文件，压缩文件不会消失）
  opt:
  	-f  更新现有的文件
25.gzip 源文件
	（压缩为.gz格式的压缩文件，源文件会消失）
   gzip -c 源文件 > 压缩文件   (等于是输出重定向)
	（压缩为.gz格式，源文件保留）
   gzip -r 目录
	（压缩目录下的所有子文件，但是不能压缩目录）
26.gzip -d 压缩文件
   gunzip  压缩文件
	（解压缩文件，压缩包也不会保留）
   gunzip -r 压缩目录
	（解压缩目录，目录下所有子文件解压缩）
27.bzip2 源文件
	（压缩为.bz2格式，不保留源文件）
   bzip2 -k 源文件
	（压缩之后保留源文件）
   注：bzip2命令不能压缩目录
28.bzip2 -d 压缩文件
   bunzip2  压缩文件
	（解压缩，-k保留压缩文件）
29.tar (-cvf) 打包文件名 源文件
	（打包文件，打包过后可以进行压缩，源文件保留）
  opt:
	-c  打包
	-v  显示过程
	-f  指定打包后的文件名
	（注：一般直接用-cvf一起）
30. tar -xvf 打包文件名
	（解打包文件，打包文件保留）
31.tar -zcvf 压缩包名.tar.gz 源文件
	（先打包为.tar格式，再压缩为.gz格式，源文件保留）
   tar -zxvf 压缩包名.tar.gz
	（解压缩.tar.gz格式，打包文件保留）
32.tar -jcvf 压缩包.tar.bz2 源文件
	（先打包为.tar格式，再压缩为.bz2格式，源文件保留）
   tar -jxvf 压缩包名.tar.bz2
	（解压缩.tar.bz2格式，打包文件保留）
33.tar -jxvf 压缩包名.tar.bz2 -C [路径]
   tar -zxvf 压缩包名.tar.gz -C [路径]
	（解压缩到指定路径）

   （注：如果要压缩到指定路径，直接在压缩包前面加绝对路径就行，压缩多个文件用空格隔开）
   （注：Linux中常用的是先打包再压缩）
34.tar -ztvf 压缩包名.tar.gz
   tar -jtvf 压缩包名.tar.bz2
	（查看压缩包，不解压）
35.shutdown (opt) 时间
  opt:
	-c  取消前一个关机命令
	-h  关机
	-r  重启
36.init (0-6)
	（调用、改变系统级别）
系统运行级别：
	 0  关机
	 1  单用户  （安全模式，进去做系统修复）
	 2  不完全单用户，不含NFS服务  （字符界面，不包含文件共享服务）
	 3  完全多用户  （字符界面）
	 4  未分配
	 5  图形界面
	 6  重启
36.runlevel
	（查看运行级别，从哪个级别到哪个级别（N 3、3 5））
	启动处于哪个级别在/etc/inittab中设置
37.date
	（显示系统时间）
38.logout
	（退出登录）
39.mount
	（查看系统中已经挂载的设备）
40.mount -a
	（根据配置文件/etc/fstab的内容，自动挂载，可以写入此文件进行永久挂载）
41.mount [-t 文件系统] [-o 特殊选项] 设备文件名 挂载点
	-t 文件系统：加入文件系统类型来指定挂载的类型，可以ext3、ext4、iso9660等文件系统
	-o 特殊选项：可以指定挂载的额外选项
		exec/noexec 执行/不执行，设定是否允许在文件系统中执行可执行文件，默认exec
		remount  重新挂载已经挂载的文件系统，一般用于指定修改特殊权限
42.mkdir /mnt/cdrom/
	（建立挂载点）
   mount /dev/sr0 /mnt/cdrom
	（挂载光盘，固定/dev/sr0）
43.umount 设备文件名或挂载点
   umount /mnt/cdrom
	（卸载光盘）
44.chmod [权限] [文件名]
	（给文件赋予权限）
    （1）r-4,w-2,x-1（777,644,755）
    （2）设定SUID，chmod 4755 文件名/chmod u+s 文件名，4表示SUID
    （3）取消SUID，chmod 0755/chmod u-s
    （4）设定SGID，chmod g+s 文件名/chmod 2755 文件名
    （5）设置粘着位(SBIT)，chmod 1577/chmod o+t
45.fdisk -l
	（查看硬盘设分区情况）
   mount -t vfat /dec/sdb1 /mnt/usb
	（挂载U盘）

   （注：Linux默认不支持NTFS文件系统）
46.w 
	（查看用户登录信息）
47.who
	（同样是查看用户登录信息，比w简单）
48.last
	（查询当前登录和过去登录的用户信息，读取/var/log/wtmp文件数据）
49.lastlog
	（查看所有用户的最后一次登录时间，读取/var/log/lastlog文件数据）
50.pkill -kill -t 登录终端(TTY)
	（强制剔除登录终端登录的用户，登录终端可以用w查看）
51.more (opt) [文件名]
	（以一页一页的形式显示文件内容，空白键下一页，b键往回一页）
  opt:
	-f  计算行数时，以实际行数
	-s  当有两个连续空行时，以一行的空行代替
52.netstat (opt)
    （查看网络状态，一般用-an，一般用-tlun查看开启的端口）
  opt:
        -t  列出TCP协议端口
        -u  列出UDP协议端口
        -n  不使用域名与服务名，而使用IP地址和端口号
        -l  仅列出在监听状态的网络服务
        -a  列出所有的网络连接
        -r  列出路由列表（一般用-rn）
        -p  看到所有的PID号
53.df (opt)
	（查看磁盘分区使用情况）
   opt:
	-l  仅显示本地磁盘（默认）
	-a  显示所有文件系统的磁盘使用情况
	-h  人性化显示（1024进制）
	-H  人性化显示（1000进制）
	-T  显示磁盘分区类型
	-t  显示指定类型文件系统的磁盘分区（后面要加文件类型）
	-x  不显示指定类型文件系统的磁盘分区（后面要加文件类型）
54.du (opt)
	（统计磁盘上的文件大小）
  opt:
	-b  以byte为单位
	-k  以KB为单位
	-m  以MB为单位
	-h  人性化显示（1024进制）
	-H  人性化显示（1000进制）
	-s  指定统计目标（如统计某个指定文件夹，du -sh /etc）

55.fdisk [设备路径]
	（进入设备分区模式（MBR模式））
	分区模式：
		m	查看帮助
		n	添加一个新的分区(p——主分区，e——扩展分区，l——逻辑分区)
		1—4	分区标号，1—4默认是主分区的
			扇区起始和终止位置可以用+2000M/+2G来进行分区
		p	查看已经添加的分区状况
		d	删除分区
		w	保存分区，将分区表写入磁盘表
		t	改变系统的分区编号（可进行swap交换分区，83—>82）
	注：MBR模式主分区不超过4个，单个分区容量最大2TB
56.parted（进入设备分区模式（MBR/GPT模式））
	help			查看帮助
	select [设备名称]	切换目标磁盘
	mklabel msdos/gpt	进入MBR/GPT分区模式
	print			查看当前设备分区详情（如果要看所有的，后面加all）
	mkpart			添加分区
				为了4k对齐，可以从1M开始（1,2000）
				mkpart test 2000 3000（命令模式添加分区，名称不可以省略）
	rm [分区编号]		删除分区
	quit			退出分区模式			
	unit MB/GB		改变分区开始结束位置的单位
	注：GPT模式主分区个数“几乎”没有限制（128个），单个分区容量“几乎”没有限制（18EB，1EB=1024PB,1PB=1024TB,1TB=1024GB）
	    GPT模式分区没有主分区、扩展分区、逻辑分区的概念
57.mkfs.[文件类型]/mkfs -t [文件类型] [设备名称]
	（将设备格式化成指定的文件类型）
   mkfs.ext3 /dev/sdb3 == mkfs -t ext3 /dev/sdb3
  
   （注：MBR分区表磁盘中的扩展分区是不可以格式化的，只有主分区和逻辑分区才可以格式化） 
58.mkswap [设备名称]
	（格式化交换分区）
59.swapon [设备名称]
	（启用设备的交换分区）
60.free
	（查看swapon 加载状况）
61.swapoff [设备名称]
	（停止设备的swap分区）
62.groupadd (opt) [用户组名称]
	（ 添加用户组，可以在/etc/group中查看用户组信息）
  opt:
    	 		直接添加用户组，编号由系统默认规则给定
	-g [编号]	添加指定编号的用户组
63.groupmod (opt)
	（更改用户组信息）
	-n [新组名称] [原群组名称]	更改用户组名称
	-g [编号] [组名称]  		更改用户组编号 
64.groupdel [用户组名称]
	（删除用户组，必须先删除用户组中的用户，不然会使用户变成黑户口，权限受到影响）
65.useradd (opt)
	（添加用户，可以在/etc/passwd中查看用户信息）
  opt:
	-g [用户组] [用户名]	添加用户到指定用户组（主要组，没有指定，则系统自动创建一个和用户名相同的用户组）
	-d [文件夹] [用户名]	添加用户并指定其个人文件夹（如果没有指定，则会在/home下自动创建同名文件夹）
	-g [用户组1] -G [用户组2,3] 添加用户主要组为1，附属组为2,3
66.usermod (opt)
	（修改用户设定）
  opt:
	-c [注释信息] [用户名]	修改用户注释
	-l [新用户] [原用户]    修改用户账号
	-d [文件夹] [用户名]	给用户指定个人文件夹	
	-g [新用户组] [用户名]	修改用户的所属用户组（主要用户组）

（注：usermod -l修改名称后直接usermod -d 修改登录目录时并没有修改家目录，也就是家目录还是原来用户的（可以用ls查看，发现其实没变），此时可以用mv直接修改家目录；或者修改usermod -l后重启系统再用usermod -d [文件夹] -m [用户名]修改）
67.userdel -r [用户名]
	（删除用户，-r表示个人文件夹一并删除）
68.touch /etc/nologin
	（禁止root用户以外的其他用户登录服务器）
69.passwd (opt) [用户名]
  opt:
	 	直接加用户名表示设置账号密码
	-l	停止账号使用
	-u	启用被停止的账号
	-d	删除账号密码
	-g	修改群组密码
70.gpasswd (opt) [用户名] [组名称]
  opt:
		直接加组名称就是给用户组添加组密码（也可用上面的passwd）
	-a	将用户组设定为用户的附属组，可以添加多个附属组，用逗号连接附属组名称
	-d	去除用户的附属组 
71.newgrp [附属组名称]
	（用户执行此命令，将组临时切换到附属组，可以创建文件是附属组的，否则是主要组的，此时会要有组密码）
72.su [用户名]
	（切换到指定用户，不加就是root用户，普通用户切换到root和其他普通用户都需要密码，root切换到其他用户不需要密码）
73.id [用户名]
	（显示指定用户信息，包括用户编号，用户名，主要组，附属组信息）
74.groups [用户名]
	（显示指定用户所在的所有组）
75.chfn [用户名]
	（设置用户资料，交互模式依次输入用户资料）
76.finge [用户名]
	（显示用户资料）
78.service network restart
    （重启网络服务）
79.hostname [主机名]
    （查看与临时设置主机名）
80.ifdown 网卡设备名
    （禁用该网卡设备）
81.ifup 网卡设备名
    （启用该网卡设备）
82.route -n
    （显示路由，包含网关，-n表示用IP显示）
83.nslookup [主机名或IP]
    （进行域名与IP地址解析，直接输入然后输入server可以查看本机DNS）
84.ping (opt) ip或域名
    （探测指定IP或域名的网络状况）
  opt:
        -c 次数   指定ping包的次数
85.traceroute (opt) 域名或IP
    （路由跟踪命令）
  opt:
        -n  使用IP，不使用域名，速度更快
86.wget 网络地址
    （下载命令）
87.tcpdump -i 网卡 -nnX port 端口号
    （对端口进行抓包）
  opt:
        -i      指定网卡接口
        -nn     将数据包中的域名与服务转为IP和端口
        -X      以十六进制和ASCII码显示数据包内容
        port    指定监听的端口
88.ssh 用户名@ip
    （远程管理指定Linux服务器）
89.scp [-r] 用户名@ip:文件路径 本地路径
    （下载文件，-r表示目录）
90.scp [-r] 本地文件 用户名@ip:上传路径
    （上传文件，-r表示目录）
91.rpm -ivh 包全名
    （RPM安装，应该在Packages目录下或者使用绝对路径）
        -i(install)  安装
        -v  显示详细信息
        -h  显示进度
92.rpm -Uvh 包全名
    （RPM包升级）
        -U(update)  升级
93.rpm -e 包名
    （卸载RPM包，在任何地方都行，也有依赖性）
        -e(erase)   卸载
94.RPM包查询
   rpm -q 包名
    （查询包是否安装）
        -q(query)   查询   
   rpm -qa
    （查询所有已经安装的RPM包）
        -a(all)  所有
   rpm -qi 包名
    （查询安装包的详细信息）
        -i(information)  查询详细软件信息
        -p(packages)  查询未安装包信息，全名
   rpm -ql 包名
    （查询包中文件的安装位置）
        -l(list)    列表
        -p(packages)    查询未安装包信息
   rpm -qf 系统文件名
    （查询系统文件属于哪个RPM包）
        -f(file)    查询系统文件属于哪个软件包
   rpm -qR  包名
    （查询软件包的依赖性，一般不用，直接安装让其报依赖性错误）
        -R(requires)    查询软件包的依赖性
        -p(packages)    查询未安装包信息
95.RPM校验
   rpm -V 已安装的包名
    （校验指定RPM包中的文件）
        -V(verify)  校验指定RPM包中的文件（可以看哪个文件被修改，8个内容）
            S   文件大小是否改变
            M   文件的类型或权限是否改变
            5   文件的MD5校验和是否改变（可以看成文件内容是否改变）
            D   设备的主从代码是否改变
            L   文件的路径是否改变
            U   文件的属主是否改变
            G   文件的属组是否改变
            T   文件的修改时间是否改变
   rpm2cpio 包全名 | cpio -idv .文件绝对路径
    （RPM包中文件提取，"."提取到当前目录下）
        -rpm2cpio   将rpm包转换为cpio格式的命令
        -cpio       标准工具，用于创建软件档案文件和从档案文件中提取文件
96.yum 命令
   yum list
    （查询所有可用软件包列表）
   yum search 关键字
    （搜索服务器上所有和关键字相关的包）
   yum -y install 包名称
        -install    安装
        -y          自动回答yes
   yum -y update 包名称
        -update     升级
   yum -y remove 包名称
        -remove     卸载
   （注：服务器使用最小化安装，用什么软件安装什么，尽量不卸载）
   yum grouplist
    （列出所有可用的软件组列表）
   yum froupinstall 软件组名
    （安装指定软件组，组名可以由grouplist查询出来）
   yum groupremove 软件组名
    （卸载指定软件组）
97.chown 用户名 文件名
    （修改文件的所有者）
98.chgrp 组名 文件名
    （修改文件的所属组，也可以用chown中用冒号隔开修改）
99.umask 数字
    （查看、修改默认权限，永久修改在/etc/profile）
    0022：第一位的0是文件特殊权限，后面是文件默认权限
    文件默认权限最高666，文件默认权限是最高减去umask的值，这种减必须换算成字母来进行
    目录默认权限最高777，同样是减去umask的值
100.getfcal 文件名
    （查看acl权限）
101.setfacl (opt) 文件名
    （设定acl权限）
   opt:
        -m  给文件设定acl权限
        -x  删除文件指定的acl权限
        -b  删除文件所有的acl权限
        -d  设定文件默认acl权限（对当前目录下以后新建的子文件设定默认的acl权限，setfacl -m d:u:lw:rx love）
        -k  删除文件默认acl权限
        -R  递归设定acl权限（对当前目录下已经存在的文件设定acl权限，setfacl -m u:lw:rx -R love，可能导致权限溢出）
      setfacl -m(x) u:lw:rx love （给用户lw对文件love设定rx权限）
      setfacl -m(x) g:tg:rx love （给用户组tg对文件love设定rx权限）
      setfcal -m(x) m:rx 文件名  （对文件修改最大有效权限，可以通过mask控制最高权限）
102.visudo
    （给普通用户赋予执行命令的权限，实际上修改的是/etc/sudoers文件） 
        （1）在后面加上 user1 ALL 命令的绝对路径然后保存：user1 ALL=/sbin/shutdown -r now（越具体权限越小）
        （2）给用户赋予增加用户和密码的权限可以改变root的密码，不安全，采用正则user1 ALL=/usr/bin/passwd [A-Za-z]*, !/usr/bin/passwd "", !/usr/bin/passwd root
103.sudo (opt)
   opt:
        -l  （普通用户查看可用的sudo命令）
        命令绝对路径    普通用户执行sudo赋予的命令
104.chattr [+-=] (opt) 文件或目录名
    （设定不可改变位权限）
    +   增加权限
    -   删除权限
    =   等于某权限
   opt:
    a   append,对文件设置i属性，那么只能在文件中增加数据，但是不能删除也不能修改数据（不能用vi，只能用echo用输出重定向追加）；如果对目录设置a属性，那么只允许在目录中建立和修改文件，但是不允许删除，也不允许改名
    i   insert,对文件设置i属性，则不允许对文件进行删除、改名，也不能添加和修改数据(root也不行，但是root可以改权限)；如果对目录设置i属性，那么只能修改目录下文件的数据，不允许建立和删除文件（改名也不行）
105.lsattr (opt) 文件名或目录名
    （查看文件的不可改变位权限）
   opt:
        -d  查看目录
106.chkconfig --list    //systemctl list-unit-files
    （查看服务自启动状态，可以看到所有RPM包安装的服务，前者是centos7之前的，后者是centos7的，查看启动服务可以用netstat查看端口）
107./etc/init.d/独立服务名 start|stop|status|restart // systemctl start|stop|status|restart 独立服务名
    （独立服务的启动，前者是centos7之前的，后者是centos7的）
    service 独立服务名 start|stop|status|restart    这个都可以，最好用这个
108.chkconfig （--level 运行级别）   独立服务名 on|off  //写入/etc/rc.d/rc.local文件   // ntsysv 命令管理自启动
    （独立服务的自启动）
109.服务的绝对路径  start|stop
    （源码包安装服务的启动，不同的源码包的启动脚本不同，可以查看源码包的安装说明，查看启动脚本的方法）
110.vi /etc/rc.d/rc/local 写入源码包的启动
    （源码包服务的自启动）

