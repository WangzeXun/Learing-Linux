1.Shell是一个命令行解释器
2分类：
	Bourne Shell(BShell)，包含sh、ksh、Bash(Linux中标准)、psh、zsh
	C Shell (Unix)，包含csh、tcsh
3.Linux中支持的Shell（在/etc/shells中查看），进入那种shell，直接输入就行，如sh,csh，退出为exit
  一个shell中可以调用另一个shell，一直调用下去，变为儿子辈、孙子辈的
4.echo (opt) [输出内容]
  opt:
	-e  支持反斜线控制的字符转换
		\b    退格符，向左删除键
		\n    换行符 
		\r    回车键
		\t    制表符
		\v    垂直制表符
		\0nnn 八进制ASCII码输出字符
		\xhh  十六进制ASCII码输出字符
  echo -e "\e[1;31m wzx love bxy \e[0m"
		30m=黑色，31m=红色，32m=绿色，33m=黄色，34m=蓝色，35m=洋红，36m=青色，37m=白色
5.脚本
	1.#代表注释
	2.第一行必须加#!/bin/bash
	3.执行的时候可以用：bash+文件名执行，也可以用chmod 755赋予执行权限后直接文件名（最好用绝对路径）执行
6.alias
	（查看系统中所有命令的别名）
  alias 别名=‘'原命令'
	（设定命令别名，临时生效）
  vi ~/.bashrc
	（写入环境变量配置文件，别名永久生效，执行source .bashrc会直接生效）
  unalias 别名
	（删除别名）
7.history (opt) [历史命令保存文件]
	（直接history就是系统中操作的历史命令）
  opt:
	-c  清空历史命令（尽量不要清空）
	-w  把缓存中的历史命令写入历史命令保存文件~/.bash_history（默认保存1000条，可在/etc/profile中histsize修改）

8.输出重定向
	标准输出重定向：
			命令 > 文件        覆盖的方式
			 命令 >> 文件      追加的方式
	标准错误输出重定向：
			错误命令 2> 文件   覆盖的方式
			错误命令 2>> 文件  追加的方式
	正确输出和错误输出同时保存：
			命令 > 文件 2>&1   覆盖的方式
			命令 >> 文件 2>&1  追加的方式 （常见操作）
			命令 &> 文件       覆盖的方式  （ls &> /dev/null 将查询结果丢入文件黑洞，后面是空文件）
			命令 &>> 文件      追加的方式 （常见操作）
			命令 >> 文件1 2>>文件2 正确的追加到1，错误的追加到2 （常见操作）
	（注：一般用追加，而且是同时保存）
9.输入重定向
	wc (opt) [文件名]
	（统计文件内容）
	  opt:
		-c  统计字节数
		-w  统计单词数（靠空格区分）
		-l  统计行数
	（直接wc回车可以输入内容，ctrl+d统计所有内容）
10.多命令顺序执行
	;	命令1;命令2	多个命令顺序执行
	&&	命令1&&命令2	逻辑与，当命令1正确执行，命令2才会执行；当命令1不正确执行，则命令2不执行
	||	命令1||命令2	逻辑或，当命令1正确执行，命令2不会执行；当命令1不正确执行，命令2执行
  例：ls && echo yes || echo no
	（利用输出检测命令是否正确）
11.管道符
	命令1 | 命令2
	  （命令1的正确输出作为命令2的操作对象，命令1出错，命令2不执行）
	ls -l /etc | more           netstat -an | grep ESTABLISHED（查看服务器上连接了多少个客户端）
	netstat -an | grep ESTABLISHED | wc -l（输出客户端数目）
12.通配符
	?	匹配一个任意字符
	*	匹配任何内容
	[]	匹配括号中的任意一个字符
13.Bash中变量的默认类型都是字符型，用户自定义变量只在当前的Shell中生效，环境变量在当前Shell和这个Shell的所有子Shell中生效；变量可以自定义（包括环境变量），但是对系统生效的环境变量名和变量作用是固定的；环境变量是全局变量，用户自定义变量是局部变量，环境变量大写！
14.$变量名
	（变量调用）
	echo $x；echo $name
15.变量叠加
	x=123
	x="$x"456	x=123456
	x=${x}789	x=123456789
16.set (opt)
	（变量查看）
	opt:
		-u	如果设定此选项，调用未声明变量时会报错（默认无任何提示）
17.unset 变量名
	（变量删除，同时可以删除环境变量，但是子Shell中删除父的，退回到父中还会存在）
18.pstree
    （查看进程树，可以看到当前有几个bash）
19.export 变量名=变量值
    （设置环境变量）
20.env
    （查看环境变量）
21.PATH环境变量：系统查找命令的路径；echo $PATH；PATH="$PATH":/root（增加环境变量的值，临时生效）
22.locale
    （查询当前系统语系）
    LANG    定义系统主语系的变量
    LC_ALL  定义整体语系的变量
23.位置参数变量是为了向脚本中传递需要的值
24.read (opt) (变量名)
    （接收键盘输入）
   opt:
        -p "提示信息"   在等待read输入时，输出提示信息
        -t 秒数         read命令会一直等待用户输入，使用此选项可以指定等待时间
        -n 字符数       read命令只接受指定的字符数，就会执行
        -s              隐藏输入的数据，适用于机密信息的输入
        -e              可以输出换行符
